name: Build and Publish

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'
  release:
    types: [created]
  workflow_dispatch:    
    inputs:            
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build:
    name: ${{ github.event_name == 'release' || github.event_name == 'workflow_dispatch' && 'Release' || 'Build Check' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: windows
            goarch: amd64
          - goos: windows
            goarch: arm64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: ${{ github.event_name == 'release' || github.event_name == 'workflow_dispatch' && '0' || '1' }}
      
      - uses: actions/setup-go@v4

      - name: Set Version
        if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "APP_VERSION=${{ inputs.version }}" >> $GITHUB_ENV
          else
            echo APP_VERSION=$(echo ${GITHUB_REF} | rev | cut -d'/' -f 1 | rev ) >> ${GITHUB_ENV
          fi

      - name: Build Check
        if: github.event_name == 'push' || github.event_name == 'pull_request'
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: go build -v -trimpath ./...

      - name: Build and Upload
        if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
        uses: wangyoucao577/go-release-action@v1.40
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          project_path: "."
          binary_name: "btr"
          build_flags: "-v -trimpath"
          ldflags: >-
            -s -w 
            -X "main.version=${{ env.APP_VERSION }}"
          md5sum: false
          sha256sum: true
          compress_assets: zip
          pre_command: export CGO_ENABLED=0
          extra_files: LICENSE README.md
